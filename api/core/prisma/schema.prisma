generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions", "driverAdapters"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

model User {
  id          Int                   @id @default(autoincrement())
  name        String
  lastname    String
  email       String
  password    String
  phone       String
  cpforcnpj   String
  address     Address[]
  avaliations AvaliationOnProduct[]
  orders      Order[]

  @@unique([email, cpforcnpj, phone])
}

model Address {
  id              Int     @id @default(autoincrement())
  Street          String
  Number          String
  City            String
  isMain          Boolean
  UserId          Int
  UserMainAddress User    @relation(fields: [UserId], references: [id])
}

model Product {
  id          Int                   @id @default(autoincrement())
  name        String
  price       Float
  image       String
  sku         String
  avaliations AvaliationOnProduct[]
  categories  CategoriesOnProduct[]
  orders      ProductOnOrder[]

  @@unique([sku, name])
}

model Category {
  id          Int                   @id @default(autoincrement())
  name        String
  description String
  product     CategoriesOnProduct[]
}

model CategoriesOnProduct {
  productId  Int
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([productId, categoryId])
}

model Order {
  id       Int              @id @default(autoincrement())
  total    Float
  status   String
  userId   Int
  couponId Int?
  coupon   Coupon?          @relation(fields: [couponId], references: [id])
  user     User             @relation(fields: [userId], references: [id])
  products ProductOnOrder[]
}

model ProductOnOrder {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, orderId])
}

model AvaliationOnProduct {
  id        Int     @id @default(autoincrement())
  rating    Int
  comment   String
  userId    Int
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
}

model Coupon {
  id             Int      @id @default(autoincrement())
  code           String   @unique
  typeDiscount   String
  valueOrPercent Float
  discount       Float
  expireAt       DateTime
  used           Boolean  @default(false)
  reactivated    Boolean  @default(false)
  order          Order[]
}
